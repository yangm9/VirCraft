import os
from ..general import utils
from ..data.bioseq import ORF

class Dataset:
    def __init__(self,fa_list='',outdir='',threads=8):
        self.fa_list=os.path.abspath(fa_list)

class EnviComp(ORF):
    '''
    Compare the protein sequence from current to other environments.
    '''
    def __init__(self,fasta='',outdir='',threads=8,orfprefix=''):
        super().__init__(fasta,outdir,threads)
        self.threads=threads
        self.orfprefix=orfprefix
        #the first element of array generated by splitting orfs ID.
    def prodigal(self):
        return 0
    def vContact(self):
        cmd=[utils.selectENV('VC-vContact2')]
        wkdir=f'{self.outdir}/vContact2'
        utils.mkdir(wkdir)
        vContDB="'ProkaryoticViralRefSeq94-Merged'"
        orfs_info=f'{self.outdir}/all_merged_orfs.csv'
        cmd.extend(
            ['virus2csv.py',self.fasta,'>',orfs_info,'\n',
            'vcontact2 --rel-mode Diamond --pcs-mode MCL --vcs-mode ClusterONE',
            '-t',self.threads,'--raw-proteins',self.fasta,
            '--proteins-fp',orfs_info,'--db',vContDB,
            '--output-dir',wkdir,'\n']
        )
        if self.orfprefix:
            ntw=f'{wkdir}/c1.ntw'
            filt_ntw=f'{wkdir}/c1.filt.ntw'
            cmd.extend(
                ['grep','"',self.orfprefix,'"',ntw,'>',filt_ntw,'\n']
            )
        return cmd
    def CompSeq(self,unrun=False):
        cmd=self.vContact()
        shell=f'{self.outdir}/v_compare.sh'
        utils.printSH(shell,cmd)
        results=''
        if not unrun: results=utils.execute(cmd)
        return results
